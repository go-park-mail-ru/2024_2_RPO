services:
  auth:
    container_name: auth_service
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    restart: always
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-redis-socket:/tmp/redis/redis.sock
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  board:
    container_name: board_service
    build:
      context: .
      dockerfile: ./cmd/board/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "0.0.0.0:8802:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  user:
    container_name: user_service
    build:
      context: .
      dockerfile: ./cmd/user/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "0.0.0.0:8803:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  poll:
    container_name: poll_service
    build:
      context: .
      dockerfile: ./cmd/poll/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "0.0.0.0:8804:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  postgres:
    env_file:
      - .env
    command:
      - "bash"
      - "/pg_setup/start-postgres.sh"
    container_name: postgres
    image: postgres:bookworm
    ports:
      - "0.0.0.0:8032:5432"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-db-data:/pg_data
      - pumpkin-all-logs:/pg_logs/
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - ./database/postgres:/pg_setup

  redis:
    container_name: redis
    image: redis:latest
    command:
      - /pumpkin/redis/start-redis.sh
    volumes:
      - ./database/redis:/pumpkin/redis/
      - pumpkin-all-logs:/pumpkin_logs
      - pumpkin-redis-data:/redis_data
      - pumpkin-redis-socket:/tmp/redis/redis.sock/
    env_file:
      - .env
    networks:
      - Pumpkin-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 0.0.0.0:8010:3000
    env_file:
      - .env
    networks:
      - Pumpkin-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    env_file:
      - .env
    networks:
      - Pumpkin-network
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  node_exporter:
    depends_on:
      - prometheus
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    hostname: node_exporter
    ports:
      - "8011:9100"
    networks:
      - Pumpkin-network

  elastic:
    image: bitnami/elasticsearch
    container_name: elastic
    ports:
      - "127.0.0.1:8020:9200"

networks:
  Pumpkin-network:
    name: Pumpkin-network
    driver: bridge

volumes:
  pumpkin-db-data:
  pumpkin-redis-data:
  pumpkin-user-uploads:
  pumpkin-all-logs:
  pumpkin-postgres-socket:
  pumpkin-redis-socket:
