services:
  auth:
    container_name: auth_service
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    restart: always
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-redis-socket:/tmp/redis/redis.sock
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  board:
    container_name: board_service
    build:
      context: .
      dockerfile: ./cmd/board/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "127.0.0.1:8802:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  user:
    container_name: user_service
    build:
      context: .
      dockerfile: ./cmd/user/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "127.0.0.1:8803:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs

  poll:
    container_name: poll_service
    build:
      context: .
      dockerfile: ./cmd/poll/Dockerfile
    env_file:
      - docker_compose.env
      - .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      auth:
        condition: service_started
    restart: always
    ports:
      - "127.0.0.1:8804:8888"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-user-uploads:/pumpkin_user_uploads
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - pumpkin-all-logs:/pumpkin_logs    

  postgres:
    env_file:
      - .env
    command:
      - "bash"
      - "/pg_setup/start-postgres.sh"
    container_name: postgres
    image: postgres:bookworm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - Pumpkin-network
    volumes:
      - pumpkin-db-data:/pg_data
      - pumpkin-all-logs:/pg_logs/
      - pumpkin-postgres-socket:/tmp/postgres/postgres.sock
      - ./database/postgres:/pg_setup

  redis:
    container_name: redis
    image: redis:latest
    command:
      - /pumpkin/redis/start-redis.sh
    volumes:
      - ./database/redis:/pumpkin/redis/
      - pumpkin-all-logs:/pumpkin_logs
      - pumpkin-redis-data:/redis_data
      - pumpkin-redis-socket:/tmp/redis/redis.sock/
    env_file:
      - .env
    networks:
      - Pumpkin-network

  grafana:
    container_name: grafana
    image: grafana/grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus

  node_exporter:
    depends_on:
      - prometheus
    image: quay.io/prometheus/node-exporter:latest

networks:
  Pumpkin-network:
    name: Pumpkin-network
    driver: bridge

volumes:
  pumpkin-db-data:
  pumpkin-redis-data:
  pumpkin-user-uploads:
  pumpkin-all-logs:
  pumpkin-postgres-socket:
  pumpkin-redis-socket:
