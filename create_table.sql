CREATE TABLE "User" (
    u_id SERIAL PRIMARY KEY,
    nickname VARCHAR(255) NOT NULL,
    description VARCHAR(2048) NOT NULL,
    joined_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);
CREATE TABLE Board (
    b_id SERIAL PRIMARY KEY,
    description VARCHAR(2048) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE
    SET NULL
);
CREATE TABLE User_to_Board (
    ub_id SERIAL PRIMARY KEY,
    u_id INT NOT NULL,
    b_id INT NOT NULL,
    added_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_visit_at TIMESTAMP,
    added_by INT,
    updated_by INT,
    can_edit BOOLEAN DEFAULT FALSE,
    can_share BOOLEAN DEFAULT FALSE,
    can_invite_members BOOLEAN DEFAULT FALSE,
    is_admin BOOLEAN DEFAULT FALSE,
    notification_level INT,
    FOREIGN KEY (u_id) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (b_id) REFERENCES Board(b_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (added_by) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE
    SET NULL,
        FOREIGN KEY (updated_by) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE
    SET NULL
);
CREATE TABLE "Column" (
    col_id SERIAL PRIMARY KEY,
    b_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    order_index INT,
    FOREIGN KEY (b_id) REFERENCES Board(b_id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Card (
    crd_id SERIAL PRIMARY KEY,
    col_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    order_index INT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (col_id) REFERENCES "Column"(col_id) ON UPDATE CASCADE ON DELETE RESTRICT
);
CREATE TABLE Tag(
    t_id SERIAL PRIMARY KEY,
    b_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (b_id) REFERENCES Board(b_id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Card_to_Tag(
    ct_id SERIAL PRIMARY KEY,
    crd_id INT NOT NULL,
    t_id INT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (crd_id) REFERENCES Card(crd_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (t_id) REFERENCES Tag(t_id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE CardUpdate (
    cu_id SERIAL PRIMARY KEY,
    crd_id INT NOT NULL,
    is_visible BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT NOT NULL,
    type VARCHAR(50),
    text TEXT,
    FOREIGN KEY (crd_id) REFERENCES Card(crd_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE CardPinnedFile (
    cpf_id SERIAL PRIMARY KEY,
    crd_id INT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT NOT NULL,
    url VARCHAR(2048) NOT NULL,
    FOREIGN KEY (crd_id) REFERENCES Card(crd_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE
    SET NULL
);
CREATE TABLE Notification (
    n_id SERIAL PRIMARY KEY,
    u_id INT NOT NULL,
    b_id INT NOT NULL,
    notification_type VARCHAR(50),
    content VARCHAR(2048),
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (u_id) REFERENCES "User"(u_id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (b_id) REFERENCES Board(b_id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE CheckListField (
    cls_id SERIAL PRIMARY KEY,
    crd_id INT NOT NULL,
    order_index INT NOT NULL,
    title VARCHAR(2048) NOT NULL,
    is_done BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (crd_id) REFERENCES Card(crd_id) ON UPDATE CASCADE ON DELETE CASCADE
)
